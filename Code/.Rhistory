?read_csv
gapminder <- read_csv("MS Analytics/ANLY 506/Data/gapminder.csv")
read_csv("The first line of metadata
The second line of metadata
x,y,z
1,2,3",skip=2)
read_csv("# A comment I want to skip
x,y,z
1,2,3",comment="#")
read_csv("1,2,3\n4,5,6",col_names=FALSE)
read_csv("1,2,3\n4,5,6",col_names=c("x","y","z"))
read_csv("a,b\n1,2,3|n4,5,6")
read_csv("a,b\n1,2,3\n4,5,6")
read_csv("a,b,c\n1,2\n1,2,3,4")
read_csv("a,b\n1,2\na,b")
read_csv("a;b\n1;3")
read_csv("a,b\n,1")
read_csv("a,b\n\1")
str(parse_logical(c("TRUE", "FALSE", "NA")))
str(parse_integer(c("1", "2", "3")))
str(parse_date(c("2010-01-01", "1979-10-14")))
parse_integer(c("1", "231", ".", "456"), na = ".")
x <- parse_integer(c("123", "345", "abc", "123.45"))
x
parse_double("1.23")
parse_double("1,23", locale = locale(decimal_mark = ","))
?read_fwf()
parse_number("$123,456,789")
parse_number("123.456.789", locale = locale(grouping_mark = "."))
parse_number("123'456'789", locale = locale(grouping_mark = "'"))
fruit <- c("apple", "banana")
parse_factor(c("apple", "banana", "bananana"), levels = fruit)
parse_datetime("2010-10-01T2010")
parse_datetime("20101010")
parse_date("2010-10-01")
library(hms)
parse_time("01:10 am")
parse_time("20:10:01")
?locale
parse_number("123.456.789", locale = locale(grouping_mark = ".",decimal_mark="."))
parse_date("2010-10-01".locale=locale(date_format="%AD"))
parse_date("2010-10-01",locale=locale(date_format="%AD"))
parse_date("2010-10-01",locale=locale(date_format="%BC"))
d1 <- parse_date("January 1, 2010",%B%d%Y)
d1 <- parse_date("January 1, 2010","%B%d%Y")
d1 <- parse_date("January 1, 2010","%B %d, %Y")
d1
d2 <- parse_date("2015-Mar-07","%Y-%b-%d")
d2
d3 <- parse_date("06-Jun-2017","%d-%b-%Y")
d3
d4 <- parse_date(c("August 19 (2015)", "July 1 (2015)"),"%B %d (%Y)")
d4
d5 <- parse_date("12/30/14","%m/%d/%y")
d5
t1 <- parse_time("1705","%H%m")
t1
t1 <- parse_time("1705","%H%M")
t1
x <- 1:5
y <- 6:10
z <- 11:15
#Exploring different ways to create matrices and dataframes
# Create a matrix where x, y and z are columns
cbind(x, y, z)
# Create a matrix where x, y and z are rows
rbind(x, y, z)
matrix(data = 1:10,
nrow = 5,
ncol = 2)
matrix(data = 1:10,
nrow = 2,
ncol = 5)
#Now filling by row using the byrow argument
matrix(data = 1:10,
nrow = 2,
ncol = 5,
byrow = TRUE)
#Creating a dataframe of survey data
survey <- data.frame("index" = c(1, 2, 3, 4, 5),
"sex" = c("m", "m", "m", "f", "f"),
"age" = c(99, 46, 23, 54, 23))
# Create a dataframe of survey data WITHOUT factors
survey <- data.frame("index" = c(1, 2, 3, 4, 5),
"sex" = c("m", "m", "m", "f", "f"),
"age" = c(99, 46, 23, 54, 23),
stringsAsFactors = FALSE)
str(survey)
library(help="datasets")
head(ChickWeight)
# Print summary statistics of ChickWeight
summary(ChickWeight)
# Print additional information about ToothGrowth to the console
str(ChickWeight)
str(ChickWeight$weight)
names(ToothGrowth)
mean(ChickWeight$weight)
table(ToothGrowth$supp)
survey$sex <- c("m", "m", "f", "f", "m")
survey
names(survey)[1] <- "participant.number"
survey
# Change the column name from age to years
names(survey)[names(survey) == "age"] <- "years"
survey
ChickWeight[1:6, 1]
subset(x = ToothGrowth,
subset = len < 30 &
supp == "VC" &
dose >= 1)
subset(x = ToothGrowth,
subset = len < 30 &
supp == "VC",
select = c(len,dose))
health <- data.frame("age" = c(32, 24, 43, 19, 43),
"height" = c(1.75, 1.65, 1.50, 1.92, 1.80),
"weight" = c(70, 65, 62, 79, 85))
with(health, height / weight ^ 2)
library(pirates)
library(yarrr)
View (pirates)
pirate.test <- data.frame("Name" = c("Astrid","Lea","Sarina","Remon","Letizia",
"Babice","Jonas","Wendy","Niveditha","Gioia"),
"Sex" = c("F","F","F","M","F","F","M","F","F","F"),
"Age" = c(30,
25,
25,
29,
22,
22,
35,
19,
32,
21)
"Superhero" = c("Batman",
"Superman",
"Batman",
"Spiderman",
"Batman",
"Antman",
"Batman",
"Superman",
"Maggott",
"Superman")
"Tattoos" = c(11,
15,
12,
5,
65,
3,
9,
13,
900,
0)
),stringsAsFactors = FALSE)
pirate.test <- data.frame("Name" = c("Astrid","Lea","Sarina","Remon","Letizia",
"Babice","Jonas","Wendy","Niveditha","Gioia"),
"Sex" = c("F","F","F","M","F","F","M","F","F","F"),
"Age" = c(30,
25,
25,
29,
22,
22,
35,
19,
32,
21)
"Superhero" = c("Batman",
"Superman",
"Batman",
"Spiderman",
"Batman",
"Antman",
"Batman",
"Superman",
"Maggott",
"Superman")
"Tattoos" = c(11,
15,
12,
5,
65,
3,
9,
13,
900,
0)
,stringsAsFactors = FALSE)
pirate.test <- data.frame("Name" = c("Astrid","Lea","Sarina","Remon","Letizia",
"Babice","Jonas","Wendy","Niveditha","Gioia"),
"Sex" = c("F","F","F","M","F","F","M","F","F","F"),
"Age" = c(30,
25,
25,
29,
22,
22,
35,
19,
32,
21),
"Superhero" = c("Batman",
"Superman",
"Batman",
"Spiderman",
"Batman",
"Antman",
"Batman",
"Superman",
"Maggott",
"Superman"),
"Tattoos" = c(11,
15,
12,
5,
65,
3,
9,
13,
900,
0)
,stringsAsFactors = FALSE)
View(pirate.test)
median(pirate.test$Age)
mean(pirate.test$Age[pirate.test$Sex == "F"])
mean(pirate.test$Age[pirate.test$Sex == "M"])
max(pirate.test$Tattoos[pirate.test$Sex == "M"])
nrow(pirate.test$Age<32)
length(pirate.test$Age<32)
length(pirate.test$Age<31)
len(pirate.test$Age<31)
length(which(pirate.test$Age<32))
length(which(pirate.test$Age<32 & pirate.test$Sex="F"))/length(which(pirate.test$Age<32))
length(which(pirate.test$Age<32 & pirate.test$Sex == "F"))/length(which(pirate.test$Age<32))
length(which(pirate.test$Age<32 & pirate.test$Sex == "M"))/length(which(pirate.test$Age<32))
#Adding the new column tattoos.per.year which shows how many tattoos each pirate has for each year in their life.
mutate(pirate.test,Tattoos.age=Tattoos/Age)
mutate(pirate.test,tattoos.per.year=Tattoos/Age)
pirate.test
Pirate.new <- mutate(pirate.test,tattoos.per.year=Tattoos/Age)
Pirate.new
subset(x = Pirate.new,
subset = max(tattoos.per.year))
subset(x = Pirate.new,
subset == max(tattoos.per.year))
max(Pirate.new$tattoos.per.year)
Pirate.new$Name [Pirate.new$tattoos.per.year == max(Pirate.new$tattoos.per.year)]
Pirate.new$Name [Pirate.new$Superhero == "Superman"]
Pirate.new$Name [Pirate.new$Superhero == "Superman" & Pirate.new$Sex == "F"]
Pirate1 <- subset(x = Pirate.new,
subset = Age > 20 &
Superhero == "Spiderman"))
Pirate1 <- subset(x = Pirate.new,
subset = Age > 20 &
Superhero == "Spiderman")
median(Pirate1$Tattoos)
Pirate1
library(nycflights13)
library(tidyverse)
library(dplyr)
filter(flights, month == 1, day == 1)
Nov.dec <- filter(flights, month == 11 | month == 12)
View (flights)
filter(flights, dest == "IAH" | dest == "HOU")
str(flights)
str(flights$carrier)
summary(flights$carrier)
filter(flights, month == 7 | month == 8 | month == 9)
filter(flights, arr_delay >= 120, dep_delay <= 0)
filter(flights, dep_time >= 0000, dep_time <= 0600)
x1 <- filter(flights, dep_time >= 0000, dep_time <= 0600)
x1
View (x1)
?between()
flights[between(dep_time,0000,0600)]
flights[between(flights$dep_time,0000,0600)]
count(is.na(flights$dep_time))
length(is.na(flights$dep_time))
is.na(flights$dep_time)
length(is.na(flights$dep_time) == "TRUE")
length(is.na(flights$dep_time) == TRUE)
sum (is.na(flights$dep_time))
names(flights)[colSums(is.na(flights)) >0]
flights %>%
arrange(desc(is.na(dep_time)),
desc(is.na(dep_delay)),
desc(is.na(arr_time)),
desc(is.na(arr_delay)),
desc(is.na(tailnum)),
desc(is.na(air_time)))
arrange(flights, air_time)
select(flights,dep_time,dep_delay,arr_time,arr_delay)
select(flights,dep_time,dep_time,arr_time,arr_delay)
select(flights, contains("TIME"))
?select
?one_of
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time
)
mutate(flights_sml,
gain = dep_delay - arr_delay,
speed = distance / air_time * 60
)
1:3 + 1:10
t1 <- parse_time(flights$dep_time,"%H%M")
mutate(flights,arr_time - dep_time)
flights_sml <- select(flights,
year:day,
ends_with("time"),
distance,
air_time
)
flights_sml <- mutate(flights_sml,
airtime_calc = arr_time - dep_time)
View (flights_sml)
min_rank(desc(flights$arr_delay))
flights_sml <- mutate(flights_sml,
rank=min_rank(desc(flights$arr_delay)))
arrange(flights_sml,rank)
flights_sml <- select(flights,
year:day,
ends_with("time"),
ends_with("delay"),
distance,
air_time
)
flights_sml <- mutate(flights_sml,
rank=min_rank(desc(flights$arr_delay)))
arrange(flights_sml,rank)
View (flights_sml)
flights_sml <- mutate(flights_sml,
rank=min_rank(desc(flights$arr_delay)))
arrange(flights_sml,rank)
View (flights_sml)
by_dest <- group_by(flights, dest)
summarise(by_dest, delay = mean(arr_delay, na.rm = TRUE))
by_dest <- group_by(flights, dest)
delay <- summarise(by_dest,
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
)
delay <- filter(delay, count > 20, dest != "HNL")
delay
delays <- flights %>%
group_by(origin) %>%
summarise(
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(dep_delay, na.rm = TRUE)
) %>%
filter(count > 20)
knitr::opts_chunk$set(echo = TRUE)
library(rmarkdown)
library(dplyr)
library(ggplot2)
library(tidyverse)
str(diamonds)
library(rmarkdown)
library(dplyr)
library(ggplot2)
library(tidyverse)
str(ChickWeight)
str(ChickWeight)
ggplot(data = ChickWeight) +
geom_histogram(mapping = aes(x = weight), binwidth = 10)
ggplot(data = ChickWeight) +
geom_histogram(mapping = aes(x = weight), binwidth = 20)
```{r}
ggplot(data = ChickWeight) +
geom_histogram(mapping = aes(x = weight), binwidth = 50)
install.packages("lvplot")
library(lvplot)
ggplot(data = ChickWeight, mapping = aes(x = Diet, y = weight)) +
geom_lv()
str(mpg)
library(tidyverse)
str(iris)
library(ggplot2)
data("diamonds")
str(diamonds)
table(diamonds$color)
data("mtcars")
str(mtcars)
data("faithful")
str(faithful)
table(mpg$fl)
ggplot(data = mpg) +
geom_count(mapping = aes(x = class, y = f1))
ggplot(data = mpg) +
geom_count(mapping = aes(x = class, y = drv))
str(pirates)
table(pirates$favorite.pirate)
table(pirates$sword.type)
library(hexbin)
knitr::opts_chunk$set(echo = TRUE)
str(all.us.city.crime.1970)
str(all.us.city.crime.1970)
data(all.us.city.crime.1970)
install.packages("cluster.datasets")
str(all.us.city.crime.1970)
library(cluster.datasets)
str(all.us.city.crime.1970)
library(MASS)
data()
str(all.us.city.crime.1970)
data(all.us.city.crime.1970)
str(all.us.city.crime.1970)
library(factoextra)
#5data()
library(MASS)
library(cluster)
library(cluster.datasets)
library(factoextra)
data("birth.death.rates.1966")
str(birth.death.rates.1966)
C.Data <- scale(C.Data)
C.Data <- birth.death.rates.1966
C.Data <- na.omit(C.Data)
C.Data <- birth.death.rates.1966
C.Data <- na.omit(C.Data)
data("birth.death.rates.1966")
str(birth.death.rates.1966)
C.Data <- birth.death.rates.1966
C.Data <- na.omit(C.Data)
C.Data <- scale(C.Data)
library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
df <- USArrests
df <- USArrests
df <- na.omit(df)
df <- scale(df)
head(df)
C.Data <- birth.death.rates.1966
C.Data <- na.omit(C.Data)
head(C.Data)
distance <- get_dist(C.Data)
fviz_dist(distance, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
C.Data <- scale(C.Data)
distance <- get_dist(df)
fviz_dist(distance, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
data("new.haven.school.scores")
str(new.haven.school.scores)
C.Data <- new.haven.school.scores
C.Data <- na.omit(C.Data)
head(C.Data)
C.Data <- scale(C.Data)
data("new.haven.school.scores")
str(new.haven.school.scores)
C.Data <- new.haven.school.scores
C.Data <- na.omit(C.Data)
head(C.Data)
C.Data$reading.4 <- scale(C.Data$reading.4)
C.Data$arithmetic.4 <- scale(C.Data$arithmetic.4)
C.Data$reading.6 <- scale(C.Data$reading.6)
C.Data$arithmetic.6 <- scale(C.Data$arithmetic.6)
distance <- get_dist(C.Data)
fviz_dist(distance, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
install.packages("gridExtra")
df <- nutrients.meat.fish.fowl.1959
data(nutrients.meat.fish.fowl.1959)
data(nutrients.meat.fish.fowl.1959)
df <- nutrients.meat.fish.fowl.1959
df <- na.omit(df)
distance <- get_dist(df)
fviz_dist(distance, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
distance <- get_dist(df[-1])
fviz_dist(distance, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
str(df)
rownames(df) <- df$name
df$name <- NULL
distance <- get_dist(df)
fviz_dist(distance, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
data("birth.death.rates.1966")
str(birth.death.rates.1966)
C.Data <- birth.death.rates.1966
C.Data <- na.omit(C.Data)
head(C.Data)
C.Data$birth <- scale(C.Data$birth)
C.Data$death <- scale(C.Data$death)
head(C.Data)
rownames(C.Data) <- C.Data$country
C.Data$country <- NULL
distance <- get_dist(C.Data)
fviz_dist(distance, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(factoextra)
library(ggplot2)
library(tidyverse)
library(lvplot)
library(hexbin)
library(cluster)
library(gridExtra)
Data <- read_csv(MS Analytics/ANLY 506/github/ANLY-506-assignment/Data/gapminder.txt)
Data <- read_csv("MS Analytics/ANLY 506/github/ANLY-506-assignment/Data/gapminder.txt"")
Data <- read_csv("MS Analytics/ANLY 506/github/ANLY-506-assignment/Data/gapminder.txt"")
Data <- read_csv("MS Analytics/ANLY 506/github/ANLY-506-assignment/Data/gapminder.txt")
Data <- read_csv("MS Analytics/ANLY 506/github/ANLY-506-assignment/Data/gapminder.txt")
Data <- read_csv("MS Analytics/ANLY 506/github/ANLY-506-assignment/Data/gapminder.txt")
getwd()
Data <- read_csv("MS Analytics/ANLY 506/github/ANLY-506-assignment/Data/gapminder.txt")
setwd("~/")
Data <- read_csv("MS Analytics/ANLY 506/github/ANLY-506-assignment/Data/gapminder.txt")
Data <- read_csv("MS Analytics/ANLY 506/github/ANLY-506-assignment/Data/gapminder.txt")
